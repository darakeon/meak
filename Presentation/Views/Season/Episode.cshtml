@model Presentation.Models.SeasonEpisodeModel
@using Presentation.Models.General
@using Structure.Enums;

@{
    ViewBag.Title = String.Format("MEAK {0}{1} – {2}", Model.Story.Season, Model.Story, Model.Story.Title);
    Layout = "~/Views/Shared/_Layout.cshtml";
    Int32 talkCounter = 0;
    Int32 tellerCounter = 0;
    
    var topSelector = 
        new TopSelectorModel 
            {
                Total = Model.Story.SceneList.Count,
                Current = Convert.ToInt32(Model.ReadingScene[0]) - 97
            };
}



<p class="title">
    @Model.Story.Title
</p>


@Html.Partial("Partial/ChangeScene", topSelector)

@{
    var lastScene = Model.Story.SceneList.Count - 1;
}

<div class="scenes">
    @for (var s = 0; s <= lastScene; s++)
    {
        var scene = Model.Story.SceneList[s];
        
        <div class="scene @if(scene.ID == Model.ReadingScene) { @("reading") }" id="Scene@(s)">
            @foreach (var paragraph in scene.ParagraphTypeList)
            {
                <div class="paragraph @paragraph.ToString().ToLower()">
                    @switch (paragraph)
                    {
                        case ParagraphType.Talk:
                            
                            @("– ")
            
                            foreach (var piece in scene.TalkList[talkCounter].Pieces)
                            {
                                if (piece.Style == TalkStyle.Teller) { @(" – ") }
                
                                <span class="talk_@(piece.Style)">@piece.Text</span>

                                if (piece.Style == TalkStyle.Teller) { @(" – ") }
                            }
            
                            @(" (" + scene.TalkList[talkCounter].Character + ")")
        
                            talkCounter++;

                            break;
                            
                        case ParagraphType.Teller:
                        
                            foreach (var piece in scene.TellerList[tellerCounter].Pieces)
                            {
                                <div class="teller_@(piece.Style)">@piece.Text</div>
                            }

                            tellerCounter++;

                            break;
                    }
                </div>
            }
    
            @if (s == lastScene && Model.Story.LastScene != scene.ID)
            {
                <div class="continue">Continua...</div>
            }
        </div>

        talkCounter = 0;
        tellerCounter = 0;
    }
</div>

@Html.Partial("Partial/ChangeScene", topSelector)

@Html.Partial("Partial/Sign")