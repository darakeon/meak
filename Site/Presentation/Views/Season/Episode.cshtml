@model Presentation.Models.SeasonEpisodeModel
@using DK.MVC.Authentication
@using Presentation.Helpers
@using Presentation.Models.General
@using Structure.Data
@using Structure.Enums;
@using Structure.Helpers

@{
	ViewBag.Title = $"MEAK {Model.Story.Season}{Model.Story} – {Model.Story.Title}";
	Layout = "~/Views/Shared/_Layout.cshtml";

	var talkCounter = 0;
	var tellerCounter = 0;

	var topSelector =
		new TopSelectorModel
		{
			Total = Model.Story.BlockList.Count,
			Current = Convert.ToInt32(Model.ReadingBlock[0]) - 97
		};

	var season = Model.Story.Season.ID;
	var episode = Model.Story.ID;
}

<!--
<div class="header-aligner"></div>
<div class="footer-aligner"></div>
-->

<p class="title">
	@Model.Story.Title

	@if (Model.Story.HasSummary())
	{
		var route = RouteStories.With(season);

		<a href="@(route)#@episode" class="sub screen-action">
			ler resumo
		</a>
	}
</p>

@Html.Partial("Partial/ChangeBlock", topSelector)

@{
	var lastBlock = Model.Story.BlockList.Count - 1;
	var page = Authenticate.IsAuthenticated
		? Model.Story.PageStart ?? 0
		: 0;
	var lastPage = page;
	page++;
}

<div class="blocks">
	@for (var s = 0; s <= lastBlock; s++)
	{
		var block = Model.Story.BlockList[s];
		var trigger = false;
		var pageInBlock = 0;

		<div class="block @if (block.ID == Model.ReadingBlock) { @("reading") }" id="Block@(s)">
			@foreach (var paragraph in block.ParagraphTypeList)
			{
				var type = paragraph.ToString().ToLower();
				var showTrigger = trigger ? "trigger-hidden" : "";
				var pageBreak = lastPage != page ? "break" : "";
				var style = page % 2 == 0 ? "even" : "odd";
				var pageItem = $"page-{style}-item";

				<div class="paragraph @type @showTrigger @pageBreak @pageItem">
					@if (lastPage != page)
					{
						@Html.Partial("Partial/PrintHeader", Model.Story)
						@Html.Partial("Partial/PrintFooter", page)
						lastPage = page;
					}

					@switch (paragraph)
					{
						case ParagraphType.Talk:
							@("– ")
							
							var paragraphId = s + "_" + tellerCounter + "_" + talkCounter;

							for (var p = 0; p < block.TalkList[talkCounter].Pieces.Count; p++)
							{
								var piece = block.TalkList[talkCounter].Pieces[p];
								var pieceId = paragraphId + "_" + p;

								var title = piece.Style == TalkStyle.Default
									? ""
									: Dic.Talk[piece.Style];

								<span title="@title" class="talk_@(piece.Style)">
									@piece.Text
								</span>
								
								if (piece.Audio != null)
								{
									<audio id="@pieceId">
										<source src="@Paths.AudioLocalPath(season, episode, piece.Audio)"
												type="audio/mpeg">
									</audio>

									<span class="darkback play"
										  onclick="$('#@pieceId')[0].play()">&#9658;</span>
								}
							}
							
							@(" (" + block.TalkList[talkCounter].Character + ")")
							
							talkCounter++;

							break;

						case ParagraphType.Teller:

							foreach (var piece in block.TellerList[tellerCounter].Pieces)
							{
								if (piece.Style == TellerStyle.Trigger)
								{
									trigger = !trigger;
								}
								else
								{
									<div class="teller_@(piece.Style)">@piece.Text</div>
								}

								if (piece.Style == TellerStyle.Trigger)
								{
									var symbol = trigger ? "+" : "–";

									<div class="teller_@(piece.Style) trigger-toggle" data-type="@symbol" data-content="@piece.Text">
										conteúdo oculto (@symbol)
									</div>
								}
							}

							tellerCounter++;

							break;

						case ParagraphType.Page:
							page++;
							pageInBlock++;

							break;

						default:
							throw new NotImplementedException();
					}
				</div>
			}

			@if (s == lastBlock && Model.Story.LastBlock != block.ID)
			{
				<div class="continue">Continua...</div>
			}
		</div>

		talkCounter = 0;
		tellerCounter = 0;
	}
</div>

@Html.Partial("Partial/PrintSummary", Model.Story)

@Html.Partial("Partial/ChangeBlock", topSelector)

@Html.Partial("Partial/Sign")

@if (Model.Story.Link != null)
{
	<a class="book-link" href="@Model.Story.Link" target="_blank">&#x1F56E;</a>
}
