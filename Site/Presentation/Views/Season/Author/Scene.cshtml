@using Structure.Helpers
@model Presentation.Models.SeasonEditEpisodeModel
		   
@{
	var scene = Model.Story.SceneList[Model.SceneCounter];
	var formId = "form_" + scene.ID;

	var ajaxOptions = new AjaxOptions
	{
		HttpMethod = "Post",
		OnBegin = "SaveBegin('" + formId + "')",
		OnSuccess = "SaveSuccess('" + formId + "')",
		OnFailure = "SaveFailure('" + formId + "')"
	};

	var route = RouteStories.With(Model.Story.Season, Model.Story, scene);
	var html = new { id = formId };
}

<div class="scene @if(scene.ID == Model.ReadingScene) { @("reading") }" id="Scene@(Model.SceneCounter)">

	<div class="goHistory">
		<span class="paragraphCountTitle">
			Scene Paragraphs Last Count: @scene.ParagraphCount
		</span>
		
		<a href="#"
		   onclick="SaveCurrentForm();return false;"
		   class="darkback">
			Save
		</a>

		<a href="@route.ToString()"
		   class="darkback" target="_blank">
			View
		</a>
		
		<a href="@Url.Action("Upload", "Upload", route)"
		   class="darkback" target="_blank">
			Upload
		</a>
	</div>

	@using (Ajax.BeginForm("EditScene", route, ajaxOptions, html))
	{
		for (var s = 0; s <= Model.SceneCounter; s++)
		{
			@Html.HiddenFor(m => m.Story.SceneList[s].ID);
		}
		
		@Html.HiddenFor(m => m.Story.SceneList[Model.SceneCounter].Episode.Season.ID);
		@Html.HiddenFor(m => m.Story.SceneList[Model.SceneCounter].Episode.ID);
														 
		for (var p = 0; p < scene.ParagraphTypeList.Count; p++)
		{
			Model.ParagraphCounter = p;
		
			@Html.Partial("Author/Paragraph")
		}

		Model.TalkCounter = 0;
		Model.TellerCounter = 0;
	}
	
</div>
