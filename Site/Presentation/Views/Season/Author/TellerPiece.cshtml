@using Presentation
@model Presentation.Models.SeasonEditEpisodeModel

@{var piece = Model.Story.SceneList[Model.SceneCounter].TellerList[Model.TellerCounter].Pieces[Model.PieceCounter];}

<span class="paragraphPiece" id="Teller@(Model.TellerCounter)_Piece@(Model.PieceCounter)">
	<span class="teller_@(piece.Style)">
		@Html.TextBoxFor(m => m.Story.SceneList[Model.SceneCounter].TellerList[Model.TellerCounter].Pieces[Model.PieceCounter].Style,
			new { 
				@class = "lightback auxi",
				rel = ("scene" + Model.SceneCounter + "_tellerStyle" + Model.TellerCounter + "_piece" + Model.PieceCounter), 
				suggestion = "tellerStyle", 
				onfocus = "GetSuggestionBox(this)",
				onblur = "ExitSuggestionBox(this)",
				tabIndex = Model.TabIndex++
			})

		@Html.TextBoxFor(m => m.Story.SceneList[Model.SceneCounter].TellerList[Model.TellerCounter].Pieces[Model.PieceCounter].Text,
			new {
				@class = "text",
				tabIndex = Model.TabIndex++
			})

		<adder tabIndex="@(Model.TabIndex++)" class="adderPiece" scene="@Model.SceneCounter" type="Piece" subtype="Teller" paragraph="@Model.ParagraphCounter" teller="@Model.TellerCounter" piece="@Model.PieceCounter" onclick="AddInputItem(this)" url="@HttpUtility.UrlDecode(Url.Route(RouteConfig.Names.Adder, null, null, Model.CurrentScene))">+</adder>
	</span>

	<div class="suggestionBox" id="scene@(Model.SceneCounter)_tellerStyle@(Model.TellerCounter)_piece@(Model.PieceCounter)"></div>
</span>