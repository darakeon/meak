@using Presentation.Helpers
@using Structure.Helpers
@model Presentation.Models.SeasonEditEpisodeModel

@{
	var piece = Model.Story
		.BlockList[Model.BlockCounter]
		.TalkList[Model.TalkCounter]
		.Pieces[Model.PieceCounter];

	var route = RouteStories.With(null, null, Model.CurrentBlock);
	var adderUrl = HttpUtility.UrlDecode(
		Url.Action("Adder", "Season", route)
	);

	var id =
		$"block{Model.BlockCounter}" +
		$"_talkStyle{Model.TalkCounter}" +
		$"_piece{Model.PieceCounter}";

	var episode = Model.Story;
	var block = episode.BlockList[Model.BlockCounter];
	var paragraph = block.TalkList[Model.TalkCounter];

	var genderFix = Model.Show == AuthorMode.NoGender
		&& episode.HasGenderFix(piece.Style, paragraph.Character);
}

<span class="paragraphPiece" id="Talk@(Model.TalkCounter)_Piece@(Model.PieceCounter)">
	<span class="talk_@(piece.Style)">
		@if (Model.Show == AuthorMode.NoGender)
		{
			@Html.HiddenFor(m =>
				m.Story
					.BlockList[Model.BlockCounter]
					.TalkList[Model.TalkCounter]
					.Pieces[Model.PieceCounter].Style
				)
			<span class="auxi">
				@(Model.Story
					  .BlockList[Model.BlockCounter]
					  .TalkList[Model.TalkCounter]
					  .Pieces[Model.PieceCounter].Style)
			</span>
		}
		else
		{
			@Html.TextBoxFor(m =>
				m.Story
					.BlockList[Model.BlockCounter]
					.TalkList[Model.TalkCounter]
					.Pieces[Model.PieceCounter].Style,
				new
				{
					@class = "darkback auxi ",
					rel = (
						"block" + Model.BlockCounter
						+ "_talkStyle" + Model.TalkCounter
						+ "_piece" + Model.PieceCounter
						),
					suggestion = "talkStyle",
					onfocus = "GetSuggestionBox(this)",
					onblur = "ExitSuggestionBox(this)",
					tabIndex = Model.TabIndex++
				}
			)
		}

		@if (Model.Show == AuthorMode.Default || genderFix)
		{
			@Html.TextBoxFor(m => m.Story
				.BlockList[Model.BlockCounter]
				.TalkList[Model.TalkCounter]
				.Pieces[Model.PieceCounter].Text,
				new
				{
					@class = "text",
					tabIndex = Model.TabIndex++
				}
			)
		}
		else
		{
			@Html.HiddenFor(m => m.Story
				.BlockList[Model.BlockCounter]
				.TalkList[Model.TalkCounter]
				.Pieces[Model.PieceCounter].Text)
		}

		@if (Model.Show == AuthorMode.Default)
		{
			<adder
				class="adderPiece"
				block="@Model.BlockCounter"
				type="Piece"
				subtype="Talk"
				paragraph="@(Model.ParagraphCounter)"
				talk="@(Model.TalkCounter)"
				piece="@(Model.PieceCounter)"
				onclick="AddInputItem(this)"
				url="@adderUrl">+</adder>
		}
	</span>

	<div class="suggestionBox" id="@id"></div>
</span>
